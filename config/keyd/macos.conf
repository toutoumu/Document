# 这个文件仅用于 MacBook 或 MagicKeyboard
# NOTE: to use this, rename this file to default.conf and put in /etc/keyd/
# 注意：要使用此功能，请将此文件重命名为 default.conf 并放入 /etc/keyd/

# Mac-Like Configuration Example
# 类似 Mac 的配置示例
#
# 将 command 键映射成 control 并修改部分会快捷键 如 command + 向左箭头 实际发送的键位 是 command + home 将光标移动到行首
#
# Note:
#   This 'trick' generally requires that the press+release of the Meta
#   key will do nothing. On my system, I had to disable the "overlay-key"
#   in mutter to make it inert:
#     - `gsettings set org.gnome.mutter overlay-key ''`
# 注意：
# 此“技巧”通常要求按下并释放 Meta
# 键不会产生任何作用。在我的系统上，我必须禁用 mutter 中的“overlay-key”
# 以使其无效：
# - `gsettings set org.gnome.mutter overlay-key ''`

[ids]
*

[main]

# Create a new "Cmd" button, with various Mac OS-like features below
# 右边的 command 也作为 control 键使用
rightmeta = layer(meta_mac)
# 左边的 command 也作为 control 键使用
leftmeta = layer(meta_mac)

# 左侧的 control 作为 super（meta）键使用
leftcontrol = leftmeta

# Swap meta/alt
# leftmeta = leftalt

# meta_mac modifier layer; inherits from 'Ctrl' modifier layer
#
# The main part! Using this layer, we can remap our new "Cmd" key to
# do almost everything our muscle memory might need...
[meta_mac:C]

# Meta-Space: Open the Launcher (a feature of gnome-shell)
# keybinding: ? how did we arrive at M-/ ?
# space = M-/

# Switch directly to an open tab (e.g. Firefox, VS code)
1 = A-1
2 = A-2
3 = A-3
4 = A-4
5 = A-5
6 = A-6
7 = A-7
8 = A-8
9 = A-9

# Copy
c = C-insert
# Paste
v = S-insert
# Cut
x = S-delete

# Move cursor to beginning of line
left = home
# Move cursor to end of Line
right = end

# As soon as tab is pressed (but not yet released), we switch to the
# "app_switch_state" overlay where we can handle Meta-Backtick differently.
# Also, send a 'M-tab' key tap before entering app_switch_sate.
# 一旦按下 Tab 键（但尚未释放），我们就会切换到
# “app_switch_state”覆盖，我们可以在其中以不同的方式处理 Meta-Backtick。
# 此外，在进入 app_switch_sate 之前发送“M-tab”键点击。
tab = swapm(app_switch_state, M-tab)

# Meta-Backtick: Switch to next window in the application group
# - A-f6 is the default binding for 'cycle-group' in gnome
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings cycle-group`
# Meta-Backtick：切换到应用程序组中的下一个窗口
# - A-f6 是 gnome 中“cycle-group”的默认绑定
# - 键绑定：`gsettings get org.gnome.desktop.wm.keybindings cycle-group`
` = A-f6


# app_switch_state modifier layer; inherits from 'Meta' modifier layer
[app_switch_state:M]

# Meta-Tab: Switch to next application
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings switch-applications`
tab = M-tab
right = M-tab

# Meta-Backtick: Switch to previous application
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings switch-applications-backward`
` = M-S-tab
left = M-S-tab